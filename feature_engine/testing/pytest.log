============================= test session starts ==============================
platform darwin -- Python 3.11.6, pytest-7.2.2, pluggy-1.4.0
rootdir: /Users/agshruti/Documents/tpm/team-process-map/feature_engine/testing
plugins: jaxtyping-0.2.25, typeguard-2.13.3, cov-4.0.0
collected 32 items

test_feature_metrics.py FF.F......F.FFFF..F.....F.....FF                 [100%]

=================================== FAILURES ===================================
________________________ test_chat_unit_equality[row0] _________________________

row = (0, id                                                                      1
conversation_num                        ...       0
num_parentheses                                                         0
Name: 0, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 4 == 9

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_all_caps for message: HELLO WORLD, THIS IS A TEST. hi HI. hi HI hi HI" 
Expected value: 9 
Actual value: 4
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_all_caps for message: HELLO WORLD, THIS IS A TEST. hi HI. hi HI hi HI" 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 9 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 4
________________________ test_chat_unit_equality[row1] _________________________

row = (1, id                                                                      2
conversation_num                        ...       0
num_parentheses                                                         0
Name: 1, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 2 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_all_caps for message: ONE TWO THREE. four five six. sEvEn EiGhT nInE. 
Expected value: 3 
Actual value: 2
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_all_caps for message: ONE TWO THREE. four five six. sEvEn EiGhT nInE. 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 2
________________________ test_chat_unit_equality[row3] _________________________

row = (3, id                                                                           4
conversation_num                   ...  0
num_parentheses                                                              0
Name: 3, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 0 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_links for message: I like google.com and wikipedia.org but not amazon.com 
Expected value: 3 
Actual value: 0
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_links for message: I like google.com and wikipedia.org but not amazon.com 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 0
________________________ test_chat_unit_equality[row10] ________________________

row = (10, id                                                11
conversation_num                                   1
speaker...                           0
num_parentheses                                    0
Name: 10, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 1 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_bullet_points for message: * item 1\n* item 2\n- item 3 
Expected value: 3 
Actual value: 1
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_bullet_points for message: * item 1\n* item 2\n- item 3 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 1
________________________ test_chat_unit_equality[row12] ________________________

row = (12, id                                                 13
conversation_num                                    1
speak...                          0
num_parentheses                                     0
Name: 12, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 1 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_numbered_points for message: 1. First\n2. Second\n3. Third 
Expected value: 3 
Actual value: 1
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_numbered_points for message: 1. First\n2. Second\n3. Third 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 1
________________________ test_chat_unit_equality[row13] ________________________

row = (13, id                                                                          14
conversation_num                  ... 0
num_parentheses                                                              0
Name: 13, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 0 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_line_breaks for message: This is the first line.\nThis is the second line.\nThis is the third line. 
Expected value: 3 
Actual value: 0
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_line_breaks for message: This is the first line.\nThis is the second line.\nThis is the third line. 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 0
________________________ test_chat_unit_equality[row14] ________________________

row = (14, id                                                                          15
conversation_num                  ... 0
num_parentheses                                                              0
Name: 14, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 8 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_line_breaks for message: I have a line




here is a new line


here is a third line 
Expected value: 3 
Actual value: 8
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_line_breaks for message: I have a line




here is a new line


here is a third line 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 8
________________________ test_chat_unit_equality[row15] ________________________

row = (15, id                                                                          16
conversation_num                  ... 0
num_parentheses                                                              0
Name: 15, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 0 == 3

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_line_breaks for message: this is a line with\rA different kind of return value\rUsing carriage return instead of the newline character 
Expected value: 3 
Actual value: 0
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_line_breaks for message: this is a line with\rA different kind of return value\rUsing carriage return instead of the newline character 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 3 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 0
________________________ test_chat_unit_equality[row18] ________________________

row = (18, id                                                                          19
conversation_num                  ... 0
num_parentheses                                                              0
Name: 18, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 2 == 4

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_quotes for message: "I can't believe you use single quotes to quote people," she said. "Well, he replied, 'sometimes single quotes are useful when you nest quotes inside other quotes,' according to my English teacher" Then she said: 'okay' 
Expected value: 4 
Actual value: 2
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_quotes for message: "I can't believe you use single quotes to quote people," she said. "Well, he replied, 'sometimes single quotes are useful when you nest quotes inside other quotes,' according to my English teacher" Then she said: 'okay' 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 4 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 2
________________________ test_chat_unit_equality[row24] ________________________

row = (24, id                                                                          25
conversation_num                  ... 0
num_parentheses                                                              0
Name: 24, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 1 == 2

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_block_quote_responses for message: > here I am making a quote
I respond to it
> I quote again
I respond to that too 
Expected value: 2 
Actual value: 1
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_block_quote_responses for message: > here I am making a quote
I respond to it
> I quote again
I respond to that too 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 2 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 1
________________________ test_chat_unit_equality[row30] ________________________

row = (30, id                                                            31
conversation_num                                ...               0
num_parentheses                                                1
Name: 30, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 1 == 2

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_parentheses for message: ((there are multiple parentheses here)) 
Expected value: 2 
Actual value: 1
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_parentheses for message: ((there are multiple parentheses here)) 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 2 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 1
________________________ test_chat_unit_equality[row31] ________________________

row = (31, id                                        32
conversation_num                           1
speaker_nickname       ...pses                               0
num_parentheses                            2
Name: 31, Length: 120, dtype: object)

    @pytest.mark.parametrize("row", test_chat_df.iterrows())
    def test_chat_unit_equality(row):
        actual = row[1][row[1]['expected_column']]
        expected = row[1]['expected_value']
    
        try:
>           assert actual == expected
E           assert 2 == 4

test_feature_metrics.py:28: AssertionError
----------------------------- Captured stderr call -----------------------------

------TEST FAILED------
Testing num_parentheses for message: ((1+(1+3+4)^2)+7+(9+8)) 
Expected value: 4 
Actual value: 2
------------------------------ Captured log call -------------------------------
ERROR    pytest_prints:test_feature_metrics.py:30 
ERROR    pytest_prints:test_feature_metrics.py:31 ------TEST FAILED------
ERROR    pytest_prints:test_feature_metrics.py:32 Testing num_parentheses for message: ((1+(1+3+4)^2)+7+(9+8)) 
ERROR    pytest_prints:test_feature_metrics.py:33 Expected value: 4 
ERROR    pytest_prints:test_feature_metrics.py:34 Actual value: 2
=============================== warnings summary ===============================
../../../../../../../usr/local/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1641
  /usr/local/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1641: DeprecationWarning: np.find_common_type is deprecated.  Please use `np.result_type` or `np.promote_types`.
  See https://numpy.org/devdocs/release/1.25.0-notes.html and the docs for more information.  (Deprecated NumPy 1.25)
    return np.find_common_type(types, [])

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_feature_metrics.py::test_chat_unit_equality[row0] - assert 4 == 9
FAILED test_feature_metrics.py::test_chat_unit_equality[row1] - assert 2 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row3] - assert 0 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row10] - assert 1 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row12] - assert 1 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row13] - assert 0 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row14] - assert 8 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row15] - assert 0 == 3
FAILED test_feature_metrics.py::test_chat_unit_equality[row18] - assert 2 == 4
FAILED test_feature_metrics.py::test_chat_unit_equality[row24] - assert 1 == 2
FAILED test_feature_metrics.py::test_chat_unit_equality[row30] - assert 1 == 2
FAILED test_feature_metrics.py::test_chat_unit_equality[row31] - assert 2 == 4
=================== 12 failed, 20 passed, 1 warning in 1.00s ===================
